#!/usr/bin/env python

import gevent
import gevent.monkey

gevent.monkey.patch_all()

import argparse
import json
import logging
from postmocker.main import PostMocker

__version_tuple__ = (0, 0, 1)
__version__ = '.'.join(map(str, __version_tuple__))

def setup_logging(args):
    root_logger = logging.getLogger()
    root_logger.setLevel(logging.DEBUG)
    console_handler = logging.StreamHandler()
    if args.verbose:
        log_level = logging.DEBUG
    else:
        log_level = logging.INFO

    formatter = logging.Formatter('%(asctime)s [%(levelname)s] (%(name)s) %(message)s')
    console_handler.setFormatter(formatter)
    console_handler.setLevel(log_level)
    root_logger.addHandler(console_handler)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="""PostMocker
        will take a collection file where the responses are saved, and serve
        those up at the appropriate routes!
    """)
    parser.add_argument('-c', '--collection', help='Path to the collection file.', required=True)
    parser.add_argument('-p', '--port', default=8080, type=int, help='Port at which you want PostMocker to run.')
    parser.add_argument('-v', '--verbose', action='store_true', default=False, help='More detailed logging.')

    args = parser.parse_args()

    setup_logging(args)

    logging.info('Starting PostMocker, version: %s', __version__)

    with open(args.collection, 'r') as collection_file:
        collection = json.load(collection_file)
        mocker = PostMocker(collection, args.port)

    try:
        gevent.joinall([mocker.start()])
    except KeyboardInterrupt:
        mocker.stop()
